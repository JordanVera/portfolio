import { useState } from 'react';
import { useForm } from 'react-hook-form';
import {
  Box,
  Button,
  Container,
  Grid,
  FormControl,
  TextField,
} from '@mui/material';
import Spinner from './Spinner.jsx';
import { url } from '../config.js';

const OpenAiForm = () => {
  const { register, handleSubmit } = useForm();
  const [loading, setLoading] = useState(false);
  const [imageURL, setImageURL] = useState('');
  const [errorMessage, setErrorMessage] = useState('');

  const onSubmit = (data) => {
    let { prompt, size, count } = data;

    if (prompt === '') {
      alert('Please add more text');
      return;
    }

    size = '256x256';
    count = 1;

    console.log({ prompt, size, count });
    generateImageRequest(prompt, size, count);
  };

  async function generateImageRequest(prompt, size, count) {
    try {
      setLoading(true);
      setImageURL([]);
      setErrorMessage('');

      const response = await fetch(`${url}/openai/generateimage`, {
        method: 'POST',
        headers: {
          'content-type': 'Application/json',
        },
        body: JSON.stringify({
          prompt,
          size,
          count,
        }),
      });

      if (!response.ok) {
        setLoading(false);
        throw new Error('that image could not be generated');
      }

      setLoading(false);

      const data = await response.json();
      const res = data.data;

      setImageURL(res);

      console.log(data);
    } catch (error) {
      setErrorMessage(error.message);
    }
  }

  return loading ? (
    <Container>
      <main id="openAiForm" className="bgGrey">
        <Spinner />
      </main>
    </Container>
  ) : (
    <>
      <Container>
        <main id="openAiForm" className="bgGrey">
          <Grid container>
            <Grid container spacing={2}>
              <Grid item md={8}>
                <Box>
                  <h4>Generate an Image</h4>
                  <form id="image-form" onSubmit={handleSubmit(onSubmit)}>
                    <label>
                      Enter Prompt - descibe an image to be generated by AI
                    </label>{' '}
                    <FormControl sx={{ my: 1 }} required className="formInput">
                      <TextField
                        className="input"
                        defaultValue="Panda bear with gold chain in realistic style"
                        variant="outlined"
                        size="small"
                        {...register('prompt')}
                      />
                    </FormControl>
                    <Button
                      color="secondary"
                      variant="contained"
                      size="small"
                      type="submit"
                      className="submitButton"
                    >
                      Generate{' '}
                    </Button>
                  </form>
                </Box>
              </Grid>

              <Grid item md={4} xs={12} my="auto">
                <Box>
                  <h4 className="msg">{errorMessage}</h4>
                  <div className="imageGrid">
                    {imageURL.length > 0
                      ? imageURL.map((img) => {
                          return (
                            <img
                              src={img.url}
                              alt=""
                              id="image"
                              className="generatedImg"
                            />
                          );
                        })
                      : null}
                  </div>
                </Box>
              </Grid>
            </Grid>
          </Grid>
        </main>
      </Container>
    </>
  );
};
export default OpenAiForm;
